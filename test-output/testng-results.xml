<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="65" started-at="2020-05-26T01:59:34 EDT" finished-at="2020-05-26T01:59:34 EDT">
    <groups>
      <group name="smoke">
        <method signature="TestNGTest.test3()[pri:3, instance:tests.TestNGTest@3712b94]" name="test3" class="tests.TestNGTest"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="TestNGTest.test2()[pri:2, instance:tests.TestNGTest@3712b94]" name="test2" class="tests.TestNGTest"/>
        <method signature="TestNGTest.test1(java.lang.Integer, java.lang.String)[pri:1, instance:tests.TestNGTest@3712b94]" name="test1" class="tests.TestNGTest"/>
      </group> <!-- sanity -->
    </groups>
    <test name="Test" duration-ms="65" started-at="2020-05-26T01:59:34 EDT" finished-at="2020-05-26T01:59:34 EDT">
      <class name="tests.TestNGTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:tests.TestNGTest@3712b94]" name="beforeSuite" is-config="true" duration-ms="11" started-at="2020-05-26T01:59:34 EDT" finished-at="2020-05-26T01:59:34 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.TestNGTest@3712b94]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-05-26T01:59:34 EDT" finished-at="2020-05-26T01:59:34 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.TestNGTest@3712b94]" name="beforeClass" is-config="true" duration-ms="0" started-at="2020-05-26T01:59:34 EDT" finished-at="2020-05-26T01:59:34 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.TestNGTest@3712b94]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-05-26T01:59:34 EDT" finished-at="2020-05-26T01:59:34 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test2()[pri:2, instance:tests.TestNGTest@3712b94]" name="test2" duration-ms="8" started-at="2020-05-26T01:59:34 EDT" finished-at="2020-05-26T01:59:34 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.TestNGTest@3712b94]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-05-26T01:59:34 EDT" finished-at="2020-05-26T01:59:34 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.TestNGTest@3712b94]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-05-26T01:59:34 EDT" finished-at="2020-05-26T01:59:34 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test1(java.lang.Integer, java.lang.String)[pri:1, instance:tests.TestNGTest@3712b94]" name="test1" duration-ms="1" started-at="2020-05-26T01:59:34 EDT" data-provider="dp" depends-on-methods="tests.TestNGTest.test2" finished-at="2020-05-26T01:59:34 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.TestNGTest@3712b94]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-05-26T01:59:34 EDT" finished-at="2020-05-26T01:59:34 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.TestNGTest@3712b94]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-05-26T01:59:34 EDT" finished-at="2020-05-26T01:59:34 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test1(java.lang.Integer, java.lang.String)[pri:1, instance:tests.TestNGTest@3712b94]" name="test1" duration-ms="2" started-at="2020-05-26T01:59:34 EDT" data-provider="dp" depends-on-methods="tests.TestNGTest.test2" finished-at="2020-05-26T01:59:34 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.TestNGTest@3712b94]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-05-26T01:59:34 EDT" finished-at="2020-05-26T01:59:34 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.TestNGTest@3712b94]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-05-26T01:59:34 EDT" finished-at="2020-05-26T01:59:34 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test3()[pri:3, instance:tests.TestNGTest@3712b94]" name="test3" duration-ms="3" started-at="2020-05-26T01:59:34 EDT" finished-at="2020-05-26T01:59:34 EDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [false] but found [true]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at tests.TestNGTest.test3(TestNGTest.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.TestNGTest@3712b94]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-05-26T01:59:34 EDT" finished-at="2020-05-26T01:59:34 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:tests.TestNGTest@3712b94]" name="afterClass" is-config="true" duration-ms="1" started-at="2020-05-26T01:59:34 EDT" finished-at="2020-05-26T01:59:34 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.TestNGTest@3712b94]" name="afterTest" is-config="true" duration-ms="1" started-at="2020-05-26T01:59:34 EDT" finished-at="2020-05-26T01:59:34 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:tests.TestNGTest@3712b94]" name="afterSuite" is-config="true" duration-ms="0" started-at="2020-05-26T01:59:34 EDT" finished-at="2020-05-26T01:59:34 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.TestNGTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
